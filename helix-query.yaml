version: 1
indices:
  default:
    include:
      - /**
    exclude:
      - '/drafts/**'
      - '/fragments/**'
      - '/sites/default/files/**'
    target: /query-index.json
    properties:
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      thumbnail:
        select: head > meta[name="thumbnail"]
        value: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
      type:
        select: head > meta[name="template"]
        value: attribute(el, "content")
      publisher:
        select: head > meta[name="publisher"]
        value: attribute(el, "content")
      relatedProducts:
        select: head > meta[name="related-products"]
        value: attribute(el, "content")
      relatedTechnologies:
        select: head > meta[name="related-technologies"]
        value: attribute(el, "content")
      relatedApplications:
        select: head > meta[name="related-applications"]
        value: attribute(el, "content")
      gated:
        select: head > meta[name="gated"]
        value: attribute(el, "content")
      gatedURL:
        select: head > meta[name="gated-url"]
        value: attribute(el, "content")
      cardC2A:
        select: head > meta[name="card-c2a"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
      date:
        select: head > meta[name="publication-date"]
        value: parseTimestamp(attribute(el, "content"), "MM/DD/YYYY")
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
  fragments:
    include:
      - '/fragments/**'
    target: /fragments/query-index.json
    properties:
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      type:
        select: head > meta[name="type"]
        value: attribute(el, "content")
      date:
        select: head > meta[name="publication-date"]
        value: parseTimestamp(attribute(el, "content"), "MM/DD/YYYY")
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
